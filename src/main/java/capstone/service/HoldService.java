/*
 * Copyright 2020 Marcus Gonzalez, Adam Houser, Jason Pettit
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

package capstone.service;

import capstone.domain.Hold;
import capstone.domain.Picked;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;

@Service
public class HoldService {

  @Autowired
  private JdbcTemplate jdbcTemplate;

  // main query to populate the initial list
  public List<Hold> libraryNotPicked() {
    String sql = "\n"
        + "WITH hold_bib (holdID, itemID, birlBib, patronID, itemStatus, holdType) AS (SELECT\n"
        + "    h.id,\n"
        + "    i.record_id,\n"
        + "    birl.bib_record_id,\n"
        + "    h.patron_record_id,\n"
        + "    i.item_status_code,\n"
        + "    'bib'AS holdType\n"
        + "FROM\n"
        + "    sierra_view.hold h,\n"
        + "    sierra_view.bib_view b,\n"
        + "    sierra_view.item_record i,\n"
        + "    sierra_view.bib_record_item_record_link birl WHERE\n"
        + "    h.record_id = b.id\n"
        + "    AND\n"
        + "    h.is_frozen = false\n"
        + "    AND\n"
        + "    h.delay_days = 0\n"
        + "    AND\n"
        + "    i.is_available_at_library = true\n"
        + "    AND\n"
        + "    b.id = birl.bib_record_id\n"
        + "    AND\n"
        + "    birl.item_record_id = i.id\n"
        + "    AND\n"
        + "    i.item_status_code IN ('-', '(')\n"
        + "),\n"
        + "hold_item (holdID, itemID, birlBib, patronID, itemStatus, holdType)  AS  (SELECT\n"
        + "    h.id,\n"
        + "    i.record_id,\n"
        + "    birl.bib_record_id,\n"
        + "    h.patron_record_id,\n"
        + "    i.item_status_code,\n"
        + "    'item' AS holdType\n"
        + "FROM\n"
        + "    sierra_view.hold h,\n"
        + "    sierra_view.bib_view b,\n"
        + "    sierra_view.item_record i,\n"
        + "    sierra_view.bib_record_item_record_link birl WHERE\n"
        + "    h.record_id = i.record_id\n"
        + "    AND\n"
        + "    h.is_frozen = false\n"
        + "    AND\n"
        + "    h.delay_days = 0\n"
        + "    AND\n"
        + "    i.is_available_at_library = true\n"
        + "    AND\n"
        + "    b.id = birl.bib_record_id\n"
        + "    AND\n"
        + "    birl.item_record_id = i.id\n"
        + "    AND\n"
        + "    i.item_status_code IN ('-', '(')\n"
        + "),\n"
        + "branches (branchID, branchCode, branchName) AS \n"
        + "(\n"
        + "select l.id, l.code, ln.name\n"
        + "from sierra_view.location l\n"
        + "join sierra_view.location_name ln\n"
        + "\ton l.id = ln.location_id\n"
        + "where l.is_public = true\n"
        + ")\n"
        + "\n"
        + "SELECT \n"
        + "DISTINCT ON (holdID, birlBib) \n"
        + "holds2.*, branches.branchName\n"
        + "FROM (\n"
        + "\tSELECT\n"
        + "\t\tCASE\n"
        + "\t\tWHEN sierra_view.hold.pickup_location_code = LEFT(sierra_view.item_view.location_code, 1) \n"
        + "\t\t\tTHEN LEFT(sierra_view.item_view.location_code, 1)\n"
        + "\t\tWHEN sierra_view.item_view.location_code LIKE 'c%' THEN 'c'\n"
        + "\t\tWHEN sierra_view.item_view.location_code LIKE 'm%' THEN 'm'\n"
        + "\t\tWHEN sierra_view.item_view.location_code LIKE 'r%' THEN 'r'\n"
        + "\t\tELSE 'Do not fill'\n"
        + "\t\tEND AS fill_location,\n"
        + "\n"
        + "\t\tCASE\n"
        + "        WHEN sierra_view.hold.pickup_location_code = LEFT(sierra_view.item_view.location_code, 1) \n"
        + "        THEN 1 else 2\n"
        + "\t\tEND AS fill_priority,\n"
//        + "\t\tb.RowCount,\n"
        + "    \n"
        + "    holds.*,\n"
//        + "        sierra_view.bib_view.is_available_at_library,\n"
        + "        sierra_view.hold.pickup_location_code AS pickupLocation,\n"
        + "        sierra_view.item_view.location_code,\n"
        + "        sierra_view.item_view.last_checkin_gmt AS checkedInDate,\n"
        + "        sierra_view.bib_view.title as title,\n"
//        + "        sierra_view.bib_record_property.best_author,\n"
        + "        UPPER(sierra_view.item_record_property.call_number_norm) as callNumber,\n"
//        + "        sierra_view.item_record_property.barcode,\n"
        + "        sierra_view.hold.placed_gmt AS holdPlacedDate,\n"
//        + "        sierra_view.patron_view.notification_medium_code,\n"
//        + "        sierra_view.patron_view.barcode pb,\n"
        + "        sierra_view.patron_record_fullname.first_name AS fName,\n"
        + "        sierra_view.patron_record_fullname.last_name AS lName,\n"
//        + "        sierra_view.patron_record_phone.phone_number,\n"
//        + "        sierra_view.varfield.field_content,\n"
//        + "        sierra_view.hold.ir_delivery_stop_name,\n"
//        + "        sierra_view.hold.ir_print_name,\n"
        + "        sierra_view.location_name.name AS locationName,\n"
        + "        sierra_view.patron_view.pcode2\n"
        + " \n"
        + "\t\tFROM\n"
        + "        (\n"
        + "        SELECT * FROM hold_bib\n"
        + "        UNION\n"
        + "        SELECT * FROM hold_item\n"
        + "        WHERE holdID NOT IN\n"
        + "\t\t\t(SELECT holdID from hold_bib)\n"
        + "        )holds\n"
        + "        LEFT JOIN sierra_view.hold\n"
        + "        ON holds.holdID = sierra_view.hold.id\n"
        + "        LEFT JOIN sierra_view.item_view\n"
        + "        ON holds.itemID = sierra_view.item_view.id\n"
        + "                AND sierra_view.item_view.location_code NOT LIKE '%rr'\n"
        + "                AND sierra_view.item_view.location_code NOT LIKE '%hr'\n"
        + "\t\t\t\tAND sierra_view.item_view.location_code NOT LIKE '%st'\n"
        + "        LEFT JOIN sierra_view.bib_view\n"
        + "        ON holds.birlBib = sierra_view.bib_view.id\n"
        + "        LEFT JOIN sierra_view.bib_record_property\n"
        + "        ON holds.birlBib = sierra_view.bib_record_property.bib_record_id\n"
        + "        LEFT JOIN sierra_view.item_record_property\n"
        + "        ON holds.itemID = sierra_view.item_record_property.item_record_id\n"
        + "        LEFT JOIN sierra_view.patron_view\n"
        + "        ON holds.patronID = sierra_view.patron_view.id\n"
        + "        LEFT JOIN sierra_view.patron_record_phone\n"
        + "        ON holds.patronID = sierra_view.patron_record_phone.patron_record_id\n"
        + "        AND sierra_view.patron_record_phone.patron_record_phone_type_id = 1\n"
        + "        AND sierra_view.patron_record_phone.display_order = 1\n"
        + "        LEFT JOIN sierra_view.patron_record_fullname\n"
        + "        ON holds.patronID = sierra_view.patron_record_fullname.patron_record_id\n"
        + "        \n"
        + "    left join sierra_view.location \n"
        + "        on location.code = sierra_view.item_view.location_code \n"
        + "    left join sierra_view.location_name \n"
        + "        on location.id = location_name.location_id\n"
        + "    LEFT JOIN sierra_view.varfield\n"
        + "        ON holds.patronID = sierra_view.varfield.record_id\n"
        + "        AND sierra_view.varfield.varfield_type_code = 'z'\n"
        + "        AND sierra_view.varfield.occ_num = 0\n"
        + "    LEFT JOIN sierra_view.varfield geoid\n"
        + "        ON holds.patronID = geoid.record_id\n"
        + "        AND geoid.varfield_type_code = 'i'\n"
        + "    \n"
        + "left join   \n"
        + "(\n"
        + "select holdID, birlBib, count(*) as RowCount\n"
        + "from\n"
        + "(SELECT * FROM hold_bib\n"
        + "        UNION\n"
        + "        SELECT * FROM hold_item\n"
        + "        WHERE holdID NOT IN\n"
        + "                  (SELECT holdID from hold_bib)) a\n"
        + "group by\n"
        + "    holdID, birlBib\n"
        + "having\n"
        + "    count(*) > 1\n"
        + ") b on holds.holdID = b.holdID and holds.birlBib = b.birlBib\n"
        + ")holds2 \n"
        + " \n"
        + "LEFT JOIN branches on holds2.fill_location = LEFT(branches.branchCode, 1)\n"
        + " \n"
        + "WHERE\n"
        + "        fill_location != 'Do not fill'\n"
        + "        AND holdID NOT IN \n"
        + "        (SELECT field_content::bigint\n"
        + "from sierra_view.varfield_view\n"
        + "where varfield_type_code = 'r' \n"
        + "AND record_type_code = 'i' \n"
        + "AND field_content != 'null') \n"
        + " \n"
        + "ORDER BY \n"
        + "    holdID\n"
        + "    , birlBib\n"
        + "    \n"
        + "    , fill_priority\n"
        + "    \n"
        + "    , fill_location\n"
        + "    , pickupLocation\n"
        + "    , location_code\n"
        + "    ; ";


    List<Hold> holds = jdbcTemplate.query(sql, new BeanPropertyRowMapper<>(Hold.class));
    return holds;
  }

  // list of holds and items picked, keying off the varfield table
  public List<Picked> libraryPicked() {
    String sql = "WITH branches (branchID, branchCode, branchName) AS (\n"
        + "\t\tSELECT l.id, l.code, ln.name\n"
        + "\t\tFROM sierra_view.location l\n"
        + "\t\tJOIN sierra_view.location_name ln\n"
        + "\t\tON l.id = ln.location_id\n"
        + "\t\tWHERE l.is_public = true),\n"
        + "\t\t\t\t\n"
        + "\tphones AS (\n"
        + "        SELECT record_id AS patron, field_content AS phone \n"
        + "\t\tFROM sierra_view.varfield_view\n"
        + "        WHERE record_type_code = 'p'\n"
        + "        AND varfield_type_code = 'o'\n"
        + "        UNION\n"
        + "        SELECT patron_record_id AS patron, phone_number AS phone\n"
        + "        FROM sierra_view.patron_record_phone\n"
        + "        WHERE patron_record_id NOT IN\n"
        + "        \t(SELECT record_id \n"
        + "\t\t\tFROM sierra_view.varfield_view\n"
        + "        \tWHERE record_type_code = 'p'\n"
        + "        \tAND varfield_type_code = 'o'))\n"
        + "        \n"
        + "\t\tSELECT *, branches.branchName AS pickupLocationBranch \n"
        + "\t\tFROM\n"
        + "\t\t(SELECT\n"
        + "        branches.branchName\n"
        + "        , h.id AS holdID\n"
        + "        , CASE\n"
        + "        \tWHEN i.location_code LIKE 'c%' THEN 'c'\n"
        + "        \tWHEN i.location_code LIKE 'm%' THEN 'm'\n"
        + "        \tWHEN i.location_code LIKE 'r%' THEN 'r'\n"
        + "        \tELSE 'Do not fill'\n"
        + "        END AS fill_location\n"
        + "        , h.pickup_location_code AS pickupLocation\n"
        + "        , b.title\n"
        + "        , i.barcode\n"
        + "        , i.record_num AS recordNum\n"
        + "        , pv.barcode AS patronBarcode\n"
        + "        , name.first_name AS fName, name.last_name AS lName \n"
        + "        , concat(name.first_name, ' ', name.last_name) as fullName\n"
        + "        , concat(pa.addr1, ', ', pa.city, ', ', pa.region, ' ', pa.postal_code) as Address\n"
        + "        , v.field_content AS gate_code\n"
        + "        , phones.phone AS phone\n"
        + "        , pv.pcode2\n"
        + "        FROM sierra_view.hold h\n"
        + "        LEFT JOIN sierra_view.patron_view pv ON h.patron_record_id = pv.id\n"
        + "        LEFT JOIN phones ON h.patron_record_id = phones.patron\n"
        + "        LEFT JOIN sierra_view.patron_record_fullname name ON h.patron_record_id = name.patron_record_id\n"
        + "        LEFT JOIN sierra_view.patron_record_address pa ON h.patron_record_id = pa.patron_record_id\n"
        + "        LEFT JOIN sierra_view.varfield v ON pv.id = v.record_id\n"
        + "        AND v.varfield_type_code = 'k'\n"
        + "        JOIN sierra_view.varfield_view vv ON h.id = vv.field_content::bigint\n"
        + "        AND vv.record_type_code = 'i'\n"
        + "        AND vv.varfield_type_code = 'r'\n"
        + "        AND vv.field_content != 'null'\n"
        + "        LEFT JOIN sierra_view.item_view i ON vv.record_id = i.id\n"
        + "        LEFT JOIN sierra_view.bib_record_item_record_link birl ON i.id = birl.item_record_id\n"
        + "        LEFT JOIN sierra_view.bib_view b ON birl.bib_record_id = b.id\n"
        + "        JOIN branches ON LEFT(i.location_code, 1) = branches.branchCode)pickups\n"
        + "\t\t\n"
        + "\t\tJOIN branches ON pickups.fill_location = branches.branchCode;";


    List<Picked> holds = jdbcTemplate.query(sql, new BeanPropertyRowMapper<>(Picked.class));

    return holds;
  }
}

